{"remainingRequest":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mehmet/Desktop/dtt-app/src/components/book-info.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mehmet/Desktop/dtt-app/src/components/book-info.vue","mtime":1558533802598},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/cache-loader/dist/cjs.js","mtime":1556479968000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/babel-loader/lib/index.js","mtime":1556479958000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/ts-loader/index.js","mtime":1556543473000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/cache-loader/dist/cjs.js","mtime":1556479968000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js","mtime":1556479970000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport axios from 'axios'\nimport responsive from \"vue-responsive\"\n\nVue.use(responsive)\nvar baseURL = 'https://www.googleapis.com/books/v1/volumes?q='\nexport default Vue.extend({\n  name: 'book-info',\n  props: {\n    book: Number\n  },\n  data () {\n    return {\n      items: [],\n      index: 0\n    }\n  },\n  mounted () {\n    axios.get(baseURL + 'quit').then(\n      result => {\n        for (var index = 0; index < result.data.items.length; index++) {\n          Vue.set(this.items, index, result.data.items[index].volumeInfo)\n        }\n      },\n      error => {\n        console.error(error)\n      }\n    )\n  },\n  // eslint-disable-next-line\n  /* eslint-disable */\n  methods: {\n    pick: function(bookIndex) {\n      this.index = bookIndex\n    }\n  },\n});\n",{"version":3,"sources":["book-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"book-info.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"book-info\">\n    <div v-responsive.lg.md>\n      <h2>Description and details about <b>{{items.title}}</b></h2>\n      <nav class = \"bookName\" v-for = \"(book, index) in items\" :key = \"book.id\">\n        <a @click=\"pick(index)\">{{book.title}}</a>\n      </nav>\n      <ul v-for = \"(value, propertyName) in items[this.index]\" :key = \"value.id\">\n        <li v-if=\"propertyName === 'industryIdentifiers' | propertyName === 'readingModes' | propertyName === 'panelizationSummary'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Data too raw to display\n        </li>\n        <li v-else-if=\"propertyName === 'imageLinks'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value.smallThumbnail\" target=\"_blank\"> goImage</a>\n        </li>\n        <li v-else-if=\"propertyName === 'previewLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goPreview</a>\n        </li>\n        <li v-else-if=\"propertyName === 'infoLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goInfo</a>\n        </li>\n        <li v-else-if=\"propertyName === 'canonicalVolumeLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> canonical</a>\n        </li>\n        <li v-else-if=\"Array.isArray(value)\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value.join(' and ')}}\n        </li>\n        <li v-else>\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value}}\n        </li>\n      </ul>\n    </div>\n    <div v-responsive=\"['hidden-all','xs']\">\n      <h2>Description and details about <b>{{items.title}}</b></h2>\n      <nav class = \"bookName\" v-for = \"(book, index) in items\" :key = \"book.id\">\n        <a @click=\"pick(index)\">{{book.title}}</a>\n      </nav>\n      <ul v-for = \"(value, propertyName) in items[this.index]\" :key = \"value.id\">\n        <li v-if=\"propertyName === 'industryIdentifiers' | propertyName === 'readingModes' | propertyName === 'panelizationSummary'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Data too raw to display\n        </li>\n        <li v-if=\"propertyName === 'description'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Available only on desktop\n        </li>\n        <li v-else-if=\"propertyName === 'imageLinks'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value.smallThumbnail\" target=\"_blank\"> goImage</a>\n        </li>\n        <li v-else-if=\"propertyName === 'previewLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goPreview</a>\n        </li>\n        <li v-else-if=\"propertyName === 'infoLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goInfo</a>\n        </li>\n        <li v-else-if=\"propertyName === 'canonicalVolumeLink'\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> canonical</a>\n        </li>\n        <li v-else-if=\"Array.isArray(value)\">\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value.join(' and ')}}\n        </li>\n        <li v-else>\n          <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value}}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport axios from 'axios'\nimport responsive from \"vue-responsive\"\n\nVue.use(responsive)\nvar baseURL = 'https://www.googleapis.com/books/v1/volumes?q='\nexport default Vue.extend({\n  name: 'book-info',\n  props: {\n    book: Number\n  },\n  data () {\n    return {\n      items: [],\n      index: 0\n    }\n  },\n  mounted () {\n    axios.get(baseURL + 'quit').then(\n      result => {\n        for (var index = 0; index < result.data.items.length; index++) {\n          Vue.set(this.items, index, result.data.items[index].volumeInfo)\n        }\n      },\n      error => {\n        console.error(error)\n      }\n    )\n  },\n  // eslint-disable-next-line\n  /* eslint-disable */\n  methods: {\n    pick: function(bookIndex) {\n      this.index = bookIndex\n    }\n  },\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #book-info {\n    width: 80%;\n    margin: auto;\n  }\n\n  .bookName:hover {\n    cursor: pointer;\n    background-color: #42b983;\n    color: white;\n  }\n\n  .bookName {\n\n    border: 1px solid black;\n    padding: 3px;\n    border-radius: 5px;\n  }\n\n  ul {\n    text-align: left;\n    margin-top: 3%;\n  }\n</style>\n"]}]}