{"remainingRequest":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mehmet/Desktop/dtt-app/src/components/randomizer.vue?vue&type=style&index=0&id=24615b1e&scoped=true&lang=css&","dependencies":[{"path":"/home/mehmet/Desktop/dtt-app/src/components/randomizer.vue","mtime":1558269219162},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/css-loader/index.js","mtime":1556479969000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1556479970000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/postcss-loader/src/index.js","mtime":1556479969000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/cache-loader/dist/cjs.js","mtime":1556479968000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js","mtime":1556479970000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#randomizer {\n  width: 70%;\n  margin: auto;\n}\n\nh3 {\n  text-align: left;\n}\n\nul {\n  text-align: left;\n}\n\np {width: 70%; margin: auto;}\nimg {\n  margin: auto;\n  width: 70%;\n  height: 50%;\n}\n\n.myButton {\n  background-color: #44c767;\n  border-radius: 28px;\n  border: 3px solid #18ab29;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 17px;\n  padding: 12px 31px;\n  text-decoration: none;\n  text-shadow: 0px 0px 0px #2f6627;\n}\n.myButton:hover {\n  background-color: #5cbf2a;\n}\n.myButton:active {\n  position: relative;\n  top: 1px;\n}\n",{"version":3,"sources":["randomizer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"randomizer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"randomizer\">\n    <h1>Random items</h1>\n    <button class=\"myButton\" @click=\"change\">Switch</button>\n\n    <ul v-for = \"(value, propertyName) in items[this.index]\" :key = \"value.id\">\n      <li v-if=\"propertyName === 'industryIdentifiers' | propertyName === 'readingModes' | propertyName === 'panelizationSummary'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Data too raw to display\n      </li>\n      <li v-else-if=\"propertyName === 'imageLinks'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value.smallThumbnail\" target=\"_blank\"> goImage</a>\n      </li>\n      <li v-else-if=\"propertyName === 'previewLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goPreview</a>\n      </li>\n      <li v-else-if=\"propertyName === 'infoLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goInfo</a>\n      </li>\n      <li v-else-if=\"propertyName === 'canonicalVolumeLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> canonical</a>\n      </li>\n      <li v-else-if=\"Array.isArray(value)\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value.join(' and ')}}\n      </li>\n      <li v-else>\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport axios from 'axios'\n/* eslint-disable */\nvar baseURL = 'https://www.googleapis.com/books/v1/volumes?q='\n\nexport default Vue.extend({\n  name: 'randomizer',\n  props: {},\n  data () {\n    return {\n      items: {},\n      index: 0\n    }\n  },\n  mounted () {\n    // Make an array of the data objects\n    axios.get(baseURL + 'quit').then(\n      result => {\n        for (var index = 0; index < result.data.items.length; index++) {\n          Vue.set(this.items, index, result.data.items[index].volumeInfo)\n        }\n      },\n      error => {\n        console.error(error)\n      }\n    )\n  },\n  methods: {\n    change: function () {\n      this.index = Math.floor(Math.random() * (10))\n    }\n  }\n})\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#randomizer {\n  width: 70%;\n  margin: auto;\n}\n\nh3 {\n  text-align: left;\n}\n\nul {\n  text-align: left;\n}\n\np {width: 70%; margin: auto;}\nimg {\n  margin: auto;\n  width: 70%;\n  height: 50%;\n}\n\n.myButton {\n  background-color: #44c767;\n  border-radius: 28px;\n  border: 3px solid #18ab29;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 17px;\n  padding: 12px 31px;\n  text-decoration: none;\n  text-shadow: 0px 0px 0px #2f6627;\n}\n.myButton:hover {\n  background-color: #5cbf2a;\n}\n.myButton:active {\n  position: relative;\n  top: 1px;\n}\n</style>\n"]}]}