{"remainingRequest":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mehmet/Desktop/dtt-app/src/components/book-info.vue?vue&type=template&id=0d49a432&scoped=true&","dependencies":[{"path":"/home/mehmet/Desktop/dtt-app/src/components/book-info.vue","mtime":1558533802598},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/cache-loader/dist/cjs.js","mtime":1556479968000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1556479970000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/cache-loader/dist/cjs.js","mtime":1556479968000},{"path":"/home/mehmet/Desktop/dtt-app/node_modules/vue-loader/lib/index.js","mtime":1556479970000}],"contextDependencies":[],"result":["\n<div id=\"book-info\">\n  <div v-responsive.lg.md>\n    <h2>Description and details about <b>{{items.title}}</b></h2>\n    <nav class = \"bookName\" v-for = \"(book, index) in items\" :key = \"book.id\">\n      <a @click=\"pick(index)\">{{book.title}}</a>\n    </nav>\n    <ul v-for = \"(value, propertyName) in items[this.index]\" :key = \"value.id\">\n      <li v-if=\"propertyName === 'industryIdentifiers' | propertyName === 'readingModes' | propertyName === 'panelizationSummary'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Data too raw to display\n      </li>\n      <li v-else-if=\"propertyName === 'imageLinks'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value.smallThumbnail\" target=\"_blank\"> goImage</a>\n      </li>\n      <li v-else-if=\"propertyName === 'previewLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goPreview</a>\n      </li>\n      <li v-else-if=\"propertyName === 'infoLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goInfo</a>\n      </li>\n      <li v-else-if=\"propertyName === 'canonicalVolumeLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> canonical</a>\n      </li>\n      <li v-else-if=\"Array.isArray(value)\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value.join(' and ')}}\n      </li>\n      <li v-else>\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value}}\n      </li>\n    </ul>\n  </div>\n  <div v-responsive=\"['hidden-all','xs']\">\n    <h2>Description and details about <b>{{items.title}}</b></h2>\n    <nav class = \"bookName\" v-for = \"(book, index) in items\" :key = \"book.id\">\n      <a @click=\"pick(index)\">{{book.title}}</a>\n    </nav>\n    <ul v-for = \"(value, propertyName) in items[this.index]\" :key = \"value.id\">\n      <li v-if=\"propertyName === 'industryIdentifiers' | propertyName === 'readingModes' | propertyName === 'panelizationSummary'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Data too raw to display\n      </li>\n      <li v-if=\"propertyName === 'description'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> Available only on desktop\n      </li>\n      <li v-else-if=\"propertyName === 'imageLinks'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value.smallThumbnail\" target=\"_blank\"> goImage</a>\n      </li>\n      <li v-else-if=\"propertyName === 'previewLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goPreview</a>\n      </li>\n      <li v-else-if=\"propertyName === 'infoLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> goInfo</a>\n      </li>\n      <li v-else-if=\"propertyName === 'canonicalVolumeLink'\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> <a :href=\"value\" target=\"_blank\"> canonical</a>\n      </li>\n      <li v-else-if=\"Array.isArray(value)\">\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value.join(' and ')}}\n      </li>\n      <li v-else>\n        <b>{{propertyName.charAt(0).toUpperCase() + propertyName.slice(1)}}:</b> {{value}}\n      </li>\n    </ul>\n  </div>\n</div>\n",null]}